# Дана прямоугольная доска N × M (N строк и M столбцов). В левом верхнем углу находится шахматный конь, которого необходимо переместить в правый нижний угол доски. 
# В данной задаче конь может перемещаться на две клетки вниз и одну клетку вправо или на одну клетку вниз и две клетки вправо.

# Необходимо определить, сколько существует различных маршрутов, ведущих из левого верхнего в правый нижний угол.

# Формат ввода
# Входной файл содержит два натуральных числа N и M , .

# Формат вывода
# В выходной файл выведите единственное число — количество способов добраться конём до правого нижнего угла доски.
N, M = map(int, input().strip().split(' '))

mas = []
for i in range(N):
  mas.append([0] * M)
mas[0][0] = 1
for i in range(1, N):
  for j in range(1, M):
    # приходим из клетки "на 2 вверх и 1 влево" или "на 1 вверх и 2 влево"
    if i - 2 >= 0 and j - 1 >= 0:
      mas[i][j] += mas[i - 2][j - 1]
    if i - 1 >= 0 and j - 2 >= 0:
      mas[i][j] += mas[i - 1][j - 2]

print(mas[N - 1][M - 1])