# Даны две последовательности, требуется найти и вывести их наибольшую общую подпоследовательность.

# Формат ввода
# В первой строке входных данных содержится число N – длина первой последовательности (1 ≤ N ≤ 1000). 
# Во второй строке заданы члены первой последовательности (через пробел) – целые числа, не превосходящие 10000 по модулю.

# В третьей строке записано число M – длина второй последовательности (1 ≤ M ≤ 1000). В четвертой строке задаются члены второй последовательности (через пробел)
#  – целые числа, не превосходящие 10000 по модулю.

# Формат вывода
# Требуется вывести наибольшую общую подпоследовательность данных последовательностей, через пробел.

N = int(input())
seq1 = list(map(int, input().split()))
M = int(input())
seq2 = list(map(int, input().split()))

dp = []
for i in range(N + 1):
	dp.append([0] * (M + 1))

# строим дп
for i in range(1, N+1):
  for j in range(1, M+1):
    if seq1[i-1] == seq2[j-1]:
      dp[i][j] = dp[i-1][j-1] + 1
    else:
      dp[i][j] =  max(dp[i - 1][j], dp[i][j - 1])

res = []
i = N
j = M
# восстановление последовательности
while j != 0 and i != 0:
  if dp[i][j] == dp[i - 1][j]:
    i -= 1
  elif dp[i][j] == dp[i][j - 1]:
    j -= 1
  else:
    res.append(seq1[i - 1])
    i -= 1
    j -= 1
print(*res[::-1])
  